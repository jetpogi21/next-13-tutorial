"use client";
//Generated by GeneratePageFile
import React from "react";
import axios from "axios";
import {
  useQuery,
  useMutation,
  useQueryClient,
  QueryClient,
  QueryClientProvider,
} from "@tanstack/react-query";
import axiosClient from "@/utils/api";
import { useSession, signIn, signOut } from "next-auth/react";

const queryClient = new QueryClient();

interface Post {
  userId: number;
  id: number;
  title: string;
  body: string;
}
const Dashboard: React.FC = () => {
  return (
    <QueryClientProvider client={queryClient}>
      <Posts />
    </QueryClientProvider>
  );
};

const Posts: React.FC = () => {
  const { data, isLoading, isError, error, isFetching } = useQuery({
    queryKey: ["posts"],
    queryFn: async () => {
      const { data } = await axiosClient.get("/posts");
      return data;
    },
    retry: 1,
  });

  if (isLoading) {
    return <div>Loading...</div>;
  }

  if (isError) {
    if (axios.isAxiosError(error)) {
      return <div>{error.message}</div>;
    } else {
      return <div>Stack Error</div>;
    }
  }

  /* if (isFetching) {
    return <div>Fetching...</div>;
  } */

  return <ChildPost />;
};

const ChildPost: React.FC = () => {
  const data = queryClient.getQueryData(["posts"]) as unknown as {
    status: "success" | "error";
    data: { rows: Post[] };
  };

  console.log(data);
  return (
    <div>
      {data.data.rows.map((item) => (
        <div key={item.id}>
          {item.id}. {item.title}
        </div>
      ))}
    </div>
  );
};

export default Dashboard;
