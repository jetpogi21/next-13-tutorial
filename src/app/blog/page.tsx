"use client";
//Generated by GeneratePageFile
import {
  QueryClient,
  QueryClientProvider,
  useQuery,
} from "@tanstack/react-query";
import Image from "next/image";
import Link from "next/link";
import React from "react";
import axiosClient from "../../utils/api";

export interface TPost {
  userId: number;
  id: number;
  title: string;
  body: string;
}

// Create a client
const queryClient = new QueryClient();

//prettier-ignore
//@ts-expect-error Async Server Component
const BlogPage: React.FC = async () => {

  return (
    <QueryClientProvider client={queryClient}>
      <Blogs />
    </QueryClientProvider>
    
  );
};

async function getData() {
  try {
    // Make a GET request
    const { data } = await axiosClient.get("/posts");
    return data;
  } catch (error) {
    //@ts-ignore
    throw new Error(error.message);
  }
}

//@ts-expect-error Async Server Component
const Blogs: React.FC = async () => {
  const { data, isLoading, isError } = useQuery({
    queryKey: ["blogs"],
    queryFn: getData,
    cacheTime: 0,
  });

  if (isLoading) {
    return <div>I'm loading</div>;
  }

  const blogs = data as unknown as TPost[];

  return (
    <div className="flex flex-col gap-20">
      {blogs.map((blog) => (
        <div className="flex gap-5" key={blog.id}>
          <div className="relative">
            <Image
              src={`/blog-${blog.id}.jpg`}
              alt={`blog-${blog.id}`}
              width={400}
              height={250}
              className="object-cover"
            />
          </div>
          <div className="flex flex-col flex-1 gap-5">
            <Link href={"/blog/" + blog.id} className="text-3xl font-extrabold">
              {blog.title}
            </Link>
            <p className="text-lg">{blog.body}</p>
          </div>
        </div>
      ))}
    </div>
  );
};

export default BlogPage;
