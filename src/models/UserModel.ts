//Generated by ImportCompleteModelFile
//Generated by GetCompleteModelFile

//Generated by GetModelImports
import {
  CreationOptional,
  DataTypes,
  InferAttributes,
  InferCreationAttributes,
  Model,
} from "sequelize";
import sequelize from "../config/db";

//Generated by GetModelInterface
export default interface User
  extends Model<InferAttributes<User>, InferCreationAttributes<User>> {
  userID: CreationOptional<number>;
  email: string;
  password: string;
  name: string;
  username: string;
  avatar: string;
  provider: string;
  providerID: number;
}

//Generated by GetModelDefinition
export const User = sequelize.define<User>(
  "User",
  {
    userID: {
      type: DataTypes.INTEGER,
      autoIncrement: true,
      primaryKey: true,
      field: "user_id",
    },
    email: {
      type: DataTypes.STRING(100),
      unique: true,
      field: "email",
    },
    password: {
      type: DataTypes.STRING(100),
      field: "password",
    },
    name: {
      type: DataTypes.STRING(100),
      allowNull: true,
      field: "name",
    },
    username: {
      type: DataTypes.STRING(100),
      field: "username",
    },
    avatar: {
      type: DataTypes.STRING,
      allowNull: true,
      field: "avatar",
    },
    provider: {
      type: DataTypes.STRING(50),
      allowNull: true,
      field: "provider",
    },
    providerID: {
      type: DataTypes.INTEGER,
      allowNull: true,
      field: "provider_id",
    },
  },
  {
    name: { singular: "User", plural: "Users" },
    tableName: "users",
  }
);

//Generated by GenerateSyncModel
export const UserSync = async () => {
  try {
    await User.sync({ alter: true });
    console.log("User table has been created!");
  } catch (error) {
    console.error(`Unable to create ${"User".toLowerCase()} table:`, error);
  }
};
